@function jMin($val1, $val2) {
  $result: if($val1 > $val2, $val2, $val1);
  @return $result
}

@mixin setCardSizes($className) {
  $cardSize: if($className == "sm", 96px, if($className == "med", 132px, 148px));

  $cardPadding: $cardSize / 10;
  $cardFontSize: $cardSize / 6;
  $cardLineHeight: $cardFontSize * 1.3;
  $lines: 3;

  width: $cardSize + 2 * $cardPadding + 2;
  height: $cardSize + 2 * $cardPadding + 2;

  .back, .front, .flipper {
    width: $cardSize;
    height: $cardSize;
    padding: $cardPadding;
    padding-top: $cardPadding * 0.6;
  }

  &, .back, .front {
    display: grid;
    grid-template-rows: $cardLineHeight * $lines 4px 1fr;
  }


  h3 {
    width: $cardSize;
    font-size: jMin($cardFontSize, 18px);
    line-height: $cardLineHeight;
    -webkit-line-clamp: $lines;
  }

  .icon-button {
    padding: if($className == "sm", 6px, 8px);
  }
}

.RecipeCard {
  perspective: 1200px;

  & .flipped {
    transform: rotateY(180deg);
  }

  .back, .front {
    background-color: white;
    border: 1px solid black;
    border-radius: 12px;
  }

  hr {
    width: 65%;
    align-self: center;
    justify-self: center;
    margin: 0;
    border: none;
    border-top: 1px solid #3c3c3c;
  }

  h3 {
    margin: 0;
    text-align: start;
    color: var(--offBlack); 
    display: -webkit-inline-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
    overflow-wrap: break-word;
  }

  .icon-button-contain {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
  }

  /* flip speed goes here */
  .flipper {
    transition: 0.5s;
    transform-style: preserve-3d;
  
    position: relative;
  }
  
  /* hide back of pane during swap */
  .front, .back {
    backface-visibility: hidden;
  
    position: absolute;
    top: 0;
    left: 0;
  }
  
  /* front pane, placed above back */
  .front {
    z-index: 2;
    transform: rotateY(0deg);
  }
  
  /* back, initially hidden pane */
  .back {
    transform: rotateY(180deg);
  }

  &.sm, .back.sm, .front.sm {
    @include setCardSizes('sm');
  }
  
  &.med, .back.med, .front.med {
    @include setCardSizes('med');
    
  }
  
  &.lg, .back.lg, .front.lg {
    @include setCardSizes('lg');
  }
}
